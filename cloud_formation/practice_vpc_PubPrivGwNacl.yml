---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Master stack: PathToMasterStackFile'

Parameters:
  BranchName:
    Default: BranchName
    Description: Choose which Branch do you want to use
    Type: String
  Customer:
    Description: is used as Customer tag value for all resources
    Type: String
    Default: Customer
    AllowedPattern: ^[A-Za-z0-9]*$
    ConstraintDescription: must contain only alphanumeric characters and numbers.
    MaxLength: 20
    MinLength: 1
  CustomerProject:
    Description: is used as Customer project tag value for all resources
    Type: String
    Default: CustomerProject
    AllowedPattern: ^[A-Za-z0-9]*$
    ConstraintDescription: must contain only alphanumeric characters and numbers.
    MaxLength: 20
    MinLength: 1
  Environment:
    Description: Environment to deploy. Use staging for limited resources and no alerts.
    Type: String
    Default: Staging
    AllowedValues:
    - Staging
    - Production

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Tagging and billing
      Parameters:
      - Customer
      - CustomerProject
    - Label:
        default: Choose Branch and Environment
      Parameters:
      - Environment
      - BranchName

Mappings:

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'false'
      EnableDnsHostnames: 'false'
      InstanceTenancy: dedicated
      Tags:
      - Key: name
        Value: vpcfun

  myPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "eu-west-1a"
      Tags:
      - Key: name
        Value: pub

  myPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "eu-west-1a"
      Tags:
      - Key: name
        Value: priv

  myPublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId:h
        Ref: myVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 86.12.80.28/32
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 86.12.80.28/32
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  myPrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow no direct external connection
      VpcId:
        Ref: myVPC3306
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  myPublicEC2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-08935252a36e25f85"
      KeyName: "testkey"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: "myPublicSecurityGroup"
          SubnetId: 
            Ref: "myPublicSubnet"
      BlockDeviceMappings: 
        - DeviceName: "/dev/xvda"
          Ebs: 
            VolumeType: "gp2"
            Iops: "100"
            DeleteOnTermination: "true"
            VolumeSize: "8"

  myPrivateEC2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-08935252a36e25f85"
      KeyName: "testkey"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: "myPrivateSecurityGroup"
          SubnetId: 
            Ref: "myPrivateSubnet"
      BlockDeviceMappings: 
        - DeviceName: "/dev/xvda"
          Ebs: 
            VolumeType: "gp2"
            Iops: "100"
            DeleteOnTermination: "true"
            VolumeSize: "8"

Outputs:
  PathToMasterStackFile